{"version":3,"sources":["logo.svg","tweets/components.js","lookup/components.js","App.js","reportWebVitals.js","index.js"],"names":["TweetsComponent","props","textAreaRef","React","createRef","useState","newTweets","setNewTweets","className","onSubmit","event","preventDefault","newVal","current","value","tempNewTweets","unshift","content","likes","id","ref","required","name","type","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","console","log","message","send","loadTweets","alert","map","item","index","Tweet","tweet","ActionBtn","action","setLikes","userLike","setUserLike","actionDisplay","display","onClick","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","document","getElementById","ReactDOM","render","StrictMode","tweetsEl"],"mappings":"sMAAe,G,MAAA,IAA0B,kC,iCCGlC,SAASA,EAAgBC,GAC9B,IAAMC,EAAYC,IAAMC,YADa,EAENC,mBAAS,IAFH,mBAE9BC,EAF8B,KAEpBC,EAFoB,KAerC,OACE,sBAAKC,UAAWP,EAAMO,UAAtB,UACE,qBAAKA,UAAU,cAAf,SACA,uBAAMC,SAfW,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAOV,EAAYW,QAAQC,MAC7BC,EAAc,YAAIT,GACtBS,EAAcC,QAAQ,CACpBC,QAAQL,EACRM,MAAM,EACNC,GAAG,MAELZ,EAAaQ,GACbb,EAAYW,QAAQC,MAAM,IAKxB,UACE,0BAAUM,IAAKlB,EAAamB,UAAU,EAAMb,UAAU,eAAec,KAAK,UAC1E,wBAAQC,KAAK,SAASf,UAAU,uBAAhC,wBAKF,cAACgB,EAAD,CAAYlB,UAAWA,OAKtB,SAASkB,EAAWvB,GAAQ,IAAD,EAEII,mBAAS,CAACJ,EAAMK,UAAYL,EAAMK,UAAY,KAFlD,mBAEzBmB,EAFyB,KAEbC,EAFa,OAGRrB,mBAAS,IAHD,mBAG1BsB,EAH0B,KAGnBC,EAHmB,KAuBhC,OAnBAC,qBAAU,WACR,IAAMC,EAAM,YAAI7B,EAAMK,WAAWyB,OAAON,GACrCK,EAAME,SAAWL,EAAOK,QACzBJ,EAAUE,KAGZ,CAAC7B,EAAMK,UAAUqB,EAAOF,IAE1BI,qBAAU,YC7CL,SAAoBI,GACzB,IAAMC,EAAM,IAAIC,eAIhBD,EAAIE,aADiB,OAErBF,EAAIG,KAJW,MACH,qCAIZH,EAAII,OAAS,WACXL,EAASC,EAAIK,SAAUL,EAAIM,SAE7BN,EAAIO,QAAU,SAAUC,GACtBC,QAAQC,IAAIF,GACZT,EAAS,CAAEY,QAAS,qBAAuB,MAE7CX,EAAIY,ODwCFC,EAPmB,SAACR,EAAUC,GACb,MAAXA,EACFd,EAAca,GAEdS,MAAM,6BAIT,IACIrB,EAAOsB,KAAI,SAACC,EAAMC,GACvB,OACE,cAACC,EAAD,CACEC,MAAOH,EACP1C,UAAU,uCAFZ,UAGU2C,EAHV,kBASC,SAASG,EAAUrD,GAAQ,IACxBoD,EAAkBpD,EAAlBoD,MAAOE,EAAWtD,EAAXsD,OADgB,EAELlD,mBAASgD,EAAMnC,MAAQmC,EAAMnC,MAAQ,GAFhC,mBAExBA,EAFwB,KAEjBsC,EAFiB,OAGCnD,oBACX,IAAnBgD,EAAMI,UAJuB,mBAGxBA,EAHwB,KAGdC,EAHc,KAMzBlD,EAAYP,EAAMO,UACpBP,EAAMO,UACN,yBACEmD,EAAgBJ,EAAOK,QAAUL,EAAOK,QAAU,SAalDA,EACY,SAAhBL,EAAOhC,KAAP,UAA4BL,EAA5B,YAAqCyC,GAAkBA,EACzD,OACE,wBAAQnD,UAAWA,EAAWqD,QAfZ,SAACnD,GACnBA,EAAMC,iBACc,SAAhB4C,EAAOhC,QACQ,IAAbkC,GACFD,EAAStC,EAAQ,GACjBwC,GAAY,KAEZF,EAAStC,EAAQ,GACjBwC,GAAY,MAOhB,SACGE,IAKA,SAASR,EAAMnD,GAAQ,IACpBoD,EAAUpD,EAAVoD,MACF7C,EAAYP,EAAMO,UACpBP,EAAMO,UACN,0BACJ,OACE,sBAAKA,UAAWA,EAAhB,UACE,8BACG6C,EAAMlC,GADT,IACckC,EAAMpC,WAEpB,sBAAKT,UAAU,gBAAf,UACE,cAAC8C,EAAD,CAAWD,MAAOA,EAAOE,OAAQ,CAAEhC,KAAM,OAAQqC,QAAS,WAC1D,cAACN,EAAD,CACED,MAAOA,EACPE,OAAQ,CAAEhC,KAAM,SAAUqC,QAAS,YAErC,cAACN,EAAD,CACED,MAAOA,EACPE,OAAQ,CAAEhC,KAAM,UAAWqC,QAAS,mBE9F/BE,MAhBf,WACE,OACE,qBAAKtD,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKuD,IAAKC,EAAMxD,UAAU,WAAWyD,IAAI,SACzC,sCACO,8CADP,0BAGA,8BACE,cAACjE,EAAD,YCHKkE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCRQ,EAAMC,SAASC,eAAe,QAChCF,GACJG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MACkBL,GAGtB,IAAMM,EAASL,SAASC,eAAe,WACpCI,GACDH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChF,EAAD,MACkBiF,GAIxBf,M","file":"static/js/main.e0fd107a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from \"react\";\nimport { loadTweets } from \"../lookup\";\n\nexport function TweetsComponent(props) {\n  const textAreaRef=React.createRef()\n  const [newTweets,setNewTweets]=useState([])\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newVal=textAreaRef.current.value\n    let tempNewTweets=[...newTweets]\n    tempNewTweets.unshift({\n      content:newVal,\n      likes:0,\n      id:123\n    })\n    setNewTweets(tempNewTweets)\n    textAreaRef.current.value=''\n  };\n  return (\n    <div className={props.className}>\n      <div className='col-12 mb-3'>\n      <form onSubmit={handleSubmit}>\n        <textarea ref={textAreaRef} required={true} className=\"form-control\" name=\"tweet\"></textarea>\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\n          Tweet\n        </button>\n      </form>\n      </div>\n      <TweetsList newTweets={newTweets}/>\n    </div>\n  );\n}\n\nexport function TweetsList(props) {\n\n  const [tweetsInit, setTweetsInit] = useState([props.newTweets ? props.newTweets : []]);\n  const[tweets,setTweets]=useState([])\n  useEffect(()=>{\n    const final=[...props.newTweets].concat(tweetsInit)\n    if(final.length !== tweets.length){\n      setTweets(final)\n    }\n\n  },[props.newTweets,tweets,tweetsInit])\n\n  useEffect(() => {\n    //do my lookup\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweetsInit(response);\n      } else {\n        alert(\"There was ana error.\");\n      }\n    };\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return (\n      <Tweet\n        tweet={item}\n        className=\"my-5 py-5 border bg-white text-dark\"\n        key={`${index}-{item.id}`}\n      />\n    );\n  });\n}\n\nexport function ActionBtn(props) {\n  const { tweet, action } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(\n    tweet.userLike === true ? true : false\n  );\n  const className = props.className\n    ? props.className\n    : \"btn btn-primary btn-sm\";\n  const actionDisplay = action.display ? action.display : \"Action\";\n  const handleClick = (event) => {\n    event.preventDefault();\n    if (action.type === \"like\") {\n      if (userLike === true) {\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n  const display =\n    action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\n  return (\n    <button className={className} onClick={handleClick}>\n      {display}\n    </button>\n  );\n}\n\nexport function Tweet(props) {\n  const { tweet } = props;\n  const className = props.className\n    ? props.className\n    : \"col-10 mx-auto col-md-6\";\n  return (\n    <div className={className}>\n      <p>\n        {tweet.id}-{tweet.content}\n      </p>\n      <div className=\"btn btn-group\">\n        <ActionBtn tweet={tweet} action={{ type: \"like\", display: \"Likes\" }} />\n        <ActionBtn\n          tweet={tweet}\n          action={{ type: \"unlike\", display: \"Unlike\" }}\n        />\n        <ActionBtn\n          tweet={tweet}\n          action={{ type: \"retweet\", display: \"Retweet\" }}\n        />\n      </div>\n    </div>\n  );\n}\n","export function loadTweets(callback) {\n  const xhr = new XMLHttpRequest();\n  const method = \"GET\";\n  const url = \"http://127.0.0.1:8000/api/tweets/\";\n  const responseType = \"json\";\n  xhr.responseType = responseType;\n  xhr.open(method, url);\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({ message: \"There is an error\" }, 400);\n  };\n  xhr.send();\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { TweetsComponent } from \"./tweets\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent/>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {TweetsComponent} from './tweets'\n\n\nconst appEl=document.getElementById('root')\nif (appEl){\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,appEl\n  );\n}\nconst tweetsEl=document.getElementById('tweetme')\nif(tweetsEl){\n  ReactDOM.render(\n    <React.StrictMode>\n      <TweetsComponent />\n    </React.StrictMode>,tweetsEl\n    );\n}\n\nreportWebVitals();\n"],"sourceRoot":""}